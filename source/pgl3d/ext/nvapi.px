public namespace pgl3d::ext::nvapi "use-unsafe";
public import core::common -;
public import core::meta m;

nvapi_init();

private function extern "pgl3d::nvapi_init" int
nvapi_init();
public function extern "pgl3d::nvapi_get_init_error" int
nvapi_get_init_error();
public function extern "pgl3d::nvapi_physical_gpus" uint
nvapi_physical_gpus();
public function extern "pgl3d::nvapi_mem_usage" size_t
nvapi_mem_usage(uint idx);
public function extern "pgl3d::nvapi_gpu_usage" int
nvapi_gpu_usage(uint idx);

extern "implementation" inline

#if defined(_MSC_VER) && defined(_M_AMD64)

#include "nvapi.h"
#pragma comment(lib,"amd64/nvapi64.lib")

namespace pgl3d {

int nvapi_init_error = -1;
bool nvapi_initialized = false;
unsigned num_physical_gpus = 0;
NvPhysicalGpuHandle physical_gpu_handle[NVAPI_MAX_LOGICAL_GPUS];

pxcrt::bt_int
nvapi_get_init_error()
{
  return nvapi_init_error;
}

pxcrt::bt_int
nvapi_init()
{
  if (nvapi_initialized) {
    return -1;
  }
  auto r = NvAPI_Initialize();
  nvapi_initialized = (r == NVAPI_OK);
  if (!nvapi_initialized) {
    nvapi_init_error = 1;
    return 1;
  }
  NvU32 num = 0;
  if (NvAPI_EnumPhysicalGPUs(physical_gpu_handle, &num) == NVAPI_OK) {
    num_physical_gpus = num;
  }
  /*
  do {
    NV_VIO_TOPOLOGY vio_topology{};
    vio_topology.version = NVVIOTOPOLOGY_VER;
    auto e = NvAPI_VIO_QueryTopology(&vio_topology);
    if (e != NVAPI_OK) {
      nvapi_init_error = e;
      return 2;
    }
  } while (false);
  */
  nvapi_init_error = 0;
  return 0;
}

pxcrt::bt_uint
nvapi_physical_gpus()
{
  return num_physical_gpus;
}

pxcrt::bt_size_t
nvapi_mem_usage(pxcrt::bt_uint idx)
{
  if (idx >= num_physical_gpus) {
    return 0;
  }
  NV_DISPLAY_DRIVER_MEMORY_INFO info{};
  info.version = NV_DISPLAY_DRIVER_MEMORY_INFO_VER;
  if (NvAPI_GPU_GetMemoryInfo(physical_gpu_handle[idx], &info) == NVAPI_OK) {
    return info.dedicatedVideoMemory - info.curAvailableDedicatedVideoMemory;
  }
  return 0;
}

pxcrt::bt_int
nvapi_gpu_usage(pxcrt::bt_uint idx)
{
  // TODO: たまに極端に遅いことがある(windows)
  if (idx >= num_physical_gpus) {
    return -1;
  }
  NV_GPU_DYNAMIC_PSTATES_INFO_EX info{};
  info.version = NV_GPU_DYNAMIC_PSTATES_INFO_EX_VER;
  if (NvAPI_GPU_GetDynamicPstatesInfoEx(physical_gpu_handle[idx], &info)
    == NVAPI_OK) {
    if (info.utilization[0].bIsPresent > 0) {
      return info.utilization[0].percentage;
    }
  }
  return -1;
}

}; // namespace pgl3d

#else

namespace pgl3d {

pxcrt::bt_int
nvapi_init()
{
  return -1;
}

pxcrt::bt_int
nvapi_get_init_error()
{
  return -1;
}

pxcrt::bt_uint
nvapi_physical_gpus()
{
  return 0;
}

pxcrt::bt_size_t
nvapi_mem_usage(pxcrt::bt_uint idx)
{
  return 0;
}

pxcrt::bt_int
nvapi_gpu_usage(pxcrt::bt_uint idx)
{
  return -1;
}

}; // namespace pgl3d

#endif

;
