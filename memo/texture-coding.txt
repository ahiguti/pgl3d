
voxelデータはtmapとtpatの二種の3d textureからなる。
それぞれのtextureはprimaryとsecondaryの二枚からなる。
primaryとsecondaryはそれぞれ8枚?のmipmapからなる。
textureの各要素は32bitの値を保持する。


primaryの値の意味(32bit rgba)
  value = texelFetch(sampler_voxtmap)
  node_type = int(value.a)
  node_type == 1 (タイル参照)ならtpatを引く
    tpat_sgn := value.rgbの上から2番目のbit。0なら正。
    tpat_rot := value.rgbの最上位bit
      rayの座標からテクスチャの座標を得るのにはsgnを適用後以下を順に適用
        1. .xが真ならxyいれかえ
        2. .yが真ならyzいれかえ
        3. .zが真ならzxいれかえ
    tpscale_log2 := value.rgbの上から3番目のbitの z*4+y*2+x*1 + 1。
      tmapボクセルに対してtpatボクセルが何倍細かいか(log2)を表す。
    curpos_tp := value.rgbの下5bit
    tpat_coord := tpat_sgn_rotate_tile(...)で計算
    value = texelFetch(sampler_voxtpat, tpat_coord)
    node_type = int(value.a)
  node_type == 0 空白
    distval = value.xyzの何か。空白距離をエンコードしている。
  node_type == 255 壁(flled)
    value.rgbはemit色に加算される。
    mipmap level > 0ではここにemit色を(secondaryにはalbedo色を)セットし、
    mipmap level == 0ではsecondaryにemit色をセットしている。
  node_type >= 160 && node_type <= 254 平面切断
    param_d = node_type - 208 (-48, +46)
    param_abc = distvalの上位4bit - 8
    distvalの下位4bitは未使用
  node_type >= 2 && node_type <= 159 球面切断
    sp_scale = distvalの上位2bit
    sp_center = distvalの下位6bit
    node_type < 64 + 2のとき
      sp_radius = node_type - 1 (1以上64以下)
    node_type >= 64 + 2 のとき裏返し
      sp_radius = node_type - 65 (1以上64以下)
    node_type >= 128 + 2のとき未使用


secondaryの値の意味(32bit rgba)
  aval := tex_val.a
    aval_me := avalの上位2bit
      aval_me == 0: 非金属
        mate_diffuse = tex_val.rgb
      aval_me == 1: emissionあり
        mate_emit = tex_val.rgb
        ただしmipmap level > 0(そのときnode_typeはつねに255)については
        ここにはemit色は入れず、primaryのrgbにemit色を入れる。
      aval_me == 2: 金属
        mate_specular = tex_val.rgb
      aval_me == 3: 金属、emissionあり (これをvoxsurf参照に変更予定)
      既定値
        mate_specular = vec3(0.04)
        mate_diffuse = vec3(0.0)
        mate_emit = vec3(0.0)

-----------------------------------------------------------------------
mipmapの生成方法

- level > 0のmipmapは常にnode_typeは255(filled)か0(space)にする。
- 8ボクセルのうち一つでも空白以外があればfilledにする。これは、大きな
  levelのmipmapを読んでraycastし、衝突したらmipmap levelを下げて詳細に
  raycastすることができるようにしている。
- 色はalbedo色を8ボクセル平均したものをsecondaryに、emit色を平均した
  ものをprimary.rgbに入れる。

